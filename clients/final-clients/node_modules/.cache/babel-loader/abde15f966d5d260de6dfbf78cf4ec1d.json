{"ast":null,"code":"var _jsxFileName = \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/Components/Auth/Auth.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport SignUp from './Components/SignUp/SignUp';\nimport SignIn from './Components/SignIn/SignIn';\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\n/**\n * @class Auth\n * @description This is an auth object that controls what page\n * is loaded based on sign up or sign in state\n */\n\nvar Auth = function Auth(_ref) {\n  var page = _ref.page,\n      setPage = _ref.setPage,\n      setAuthToken = _ref.setAuthToken,\n      setUser = _ref.setUser;\n\n  switch (page) {\n    case PageTypes.signUp:\n      return React.createElement(SignUp, {\n        setPage: setPage,\n        setAuthToken: setAuthToken,\n        setUser: setUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n\n    case PageTypes.signIn:\n      return React.createElement(SignIn, {\n        setPage: setPage,\n        setAuthToken: setAuthToken,\n        setUser: setUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n\n    case PageTypes.forgotPassword:\n      return React.createElement(ForgotPassword, {\n        setPage: setPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n\n    default:\n      return React.createElement(React.Fragment, null, \"Error, invalid path reached\");\n  }\n};\n\nAuth.propTypes = {\n  page: PropTypes.string.isRequired,\n  setPage: PropTypes.func.isRequired,\n  setAuthToken: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired\n};\nexport default Auth;","map":{"version":3,"sources":["/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/Components/Auth/Auth.js"],"names":["React","PropTypes","PageTypes","SignUp","SignIn","ForgotPassword","Auth","page","setPage","setAuthToken","setUser","signUp","signIn","forgotPassword","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AAEA;;;;;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA8C;AAAA,MAA3CC,IAA2C,QAA3CA,IAA2C;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,MAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACvD,UAAQH,IAAR;AACI,SAAKL,SAAS,CAACS,MAAf;AACI,aAAO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,OAAjB;AAA0B,QAAA,YAAY,EAAEC,YAAxC;AAAsD,QAAA,OAAO,EAAEC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAKR,SAAS,CAACU,MAAf;AACI,aAAO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEJ,OAAjB;AAA0B,QAAA,YAAY,EAAEC,YAAxC;AAAsD,QAAA,OAAO,EAAEC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAKR,SAAS,CAACW,cAAf;AACI,aAAO,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAEL,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ;AACI,aAAO,wEAAP;AARR;AAUH,CAXD;;AAaAF,IAAI,CAACQ,SAAL,GAAiB;AACbP,EAAAA,IAAI,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UADV;AAEbR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UAFX;AAGbP,EAAAA,YAAY,EAAER,SAAS,CAACgB,IAAV,CAAeD,UAHhB;AAIbN,EAAAA,OAAO,EAAET,SAAS,CAACgB,IAAV,CAAeD;AAJX,CAAjB;AAOA,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport SignUp from './Components/SignUp/SignUp';\nimport SignIn from './Components/SignIn/SignIn';\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\n\n/**\n * @class Auth\n * @description This is an auth object that controls what page\n * is loaded based on sign up or sign in state\n */\nconst Auth = ({ page, setPage, setAuthToken, setUser }) => {\n    switch (page) {\n        case PageTypes.signUp:\n            return <SignUp setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.signIn:\n            return <SignIn setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.forgotPassword:\n            return <ForgotPassword setPage={setPage} />;\n        default:\n            return <>Error, invalid path reached</>\n    }\n}\n\nAuth.propTypes = {\n    page: PropTypes.string.isRequired,\n    setPage: PropTypes.func.isRequired,\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}