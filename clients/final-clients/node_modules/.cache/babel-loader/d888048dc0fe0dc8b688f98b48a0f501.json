{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/Components/Main/Components/UploadImage/UploadImage.js\";\nimport React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage(props) {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this, props));\n\n    _this.sendRequest =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var file, fileName, data, response, error, response2;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                file = _this.state.file;\n                fileName = file.name;\n                data = new FormData();\n                data.append('file', file);\n                _context.next = 7;\n                return fetch(api.base + api.handlers.upload, {\n                  method: \"POST\",\n                  body: data,\n                  headers: new Headers({\n                    \"Authorization\": localStorage.getItem(\"Authorization\")\n                  })\n                });\n\n              case 7:\n                response = _context.sent;\n                console.log(\"response for uploading photo:\");\n                console.log(response);\n\n                if (!(response.status >= 300)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.next = 13;\n                return response.text();\n\n              case 13:\n                error = _context.sent;\n\n                _this.setError(error);\n\n                return _context.abrupt(\"return\");\n\n              case 18:\n                if (!(response.status === 200)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.next = 21;\n                return fetch(api.base + api.handlers.upload, {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    \"url\": \"https://image-441.s3.amazonaws.com/\"\n                  }),\n                  headers: new Headers({\n                    \"Authorization\": localStorage.getItem(\"Authorization\")\n                  })\n                });\n\n              case 21:\n                response2 = _context.sent;\n                alert(\"Upload Successful\"); // TODO make this better by refactoring errors\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleFile = function (e) {\n      _this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    _this.setError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    _this.state = {\n      file: null,\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    // submitPhoto = ()\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          error = _this$state.error;\n      return React.createElement(React.Fragment, null, React.createElement(Errors, {\n        error: error,\n        setError: this.setError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Upload a new image\"), React.createElement(\"form\", {\n        target: \"_blank\",\n        encType: \"multipart/form-data\" // action=\"https://api.xutiancheng.me/v1/upload/\"\n        ,\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: function onChange(e) {\n          return _this2.handleFile(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"upload\",\n        onClick: function onClick(e) {\n          return _this2.sendRequest(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/Components/Main/Components/UploadImage/UploadImage.js"],"names":["React","Component","api","Errors","UploadImage","props","sendRequest","e","preventDefault","file","state","fileName","name","data","FormData","append","fetch","base","handlers","upload","method","body","headers","Headers","localStorage","getItem","response","console","log","status","text","error","setError","JSON","stringify","response2","alert","handleFile","setState","target","files","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nclass UploadImage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null,\n            error: ''\n        }\n    }\n\n    sendRequest = async (e) => {\n        e.preventDefault();\n        const { file } = this.state;\n        var fileName = file.name;\n        let data = new FormData()\n        data.append('file', file);\n        const response = await fetch(api.base + api.handlers.upload, {\n            method: \"POST\",\n            body: data,\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\n            })\n        });\n        console.log(\"response for uploading photo:\");\n        console.log(response);\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        } else if (response.status === 200) {\n            const response2 = await fetch(api.base + api.handlers.upload, {\n                method: \"POST\",\n                body: JSON.stringify({\"url\": \"https://image-441.s3.amazonaws.com/\"}),\n                headers: new Headers({\n                    \"Authorization\": localStorage.getItem(\"Authorization\"),\n                })\n            });\n            alert(\"Upload Successful\"); // TODO make this better by refactoring errors\n\n        }\n    }\n\n    handleFile = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        });\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    // submitPhoto = ()\n    \n    render() {\n        const { firstName, lastName, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <div>Upload a new image</div>\n            <form\n                target=\"_blank\"\n                encType=\"multipart/form-data\"\n                // action=\"https://api.xutiancheng.me/v1/upload/\"\n                method=\"post\"\n                >\n                <input type=\"file\" name=\"file\" onChange={(e) => this.handleFile(e)}/>\n                {/* <input type=\"submit\" value=\"upload\"/>    */}\n                <input type=\"submit\" value=\"upload\" onClick={(e) => this.sendRequest(e)} />   \n            </form>\n        </>\n    }\n\n}\n\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}