{"version":3,"sources":["Constants/PageTypes/PageTypes.js","Components/Auth/Components/SignForm/SignForm.js","Constants/APIEndpoints/APIEndpoints.js","Components/Errors/Errors.js","Components/Auth/Components/SignUp/SignUp.js","Components/Auth/Components/SignIn/SignIn.js","Components/Auth/Components/ForgotPassword/ForgotPassword.js","Components/Auth/Auth.js","Components/Main/Content/MainPageContent/MainPageContent.js","Components/Main/Components/SignOutButton/SignOutButton.js","Components/Main/Components/UpdateName/UpdateName.js","Components/Main/Components/UpdateAvatar/UpdateAvatar.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["PageTypes","signIn","signUp","signedInMain","signedInUpdateName","signedInUpdateAvatar","forgotPassword","SignForm","_ref","setField","submitForm","values","fields","react_default","a","createElement","Fragment","onSubmit","map","d","key","name","value","onChange","type","APIEndpoints","base","testbase","handlers","users","myuser","myuserAvatar","sessions","sessionsMine","resetPasscode","passwords","Errors","error","setError","className","onClick","SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","defineProperty","target","asyncToGenerator","regenerator_default","mark","_callee","_this$state","email","userName","firstName","lastName","password","passwordConf","sendData","response","authToken","user","wrap","_context","prev","next","preventDefault","state","fetch","api","method","body","JSON","stringify","headers","Headers","Content-Type","sent","status","text","abrupt","get","localStorage","setItem","setAuthToken","json","setUser","stop","_x","apply","arguments","_this2","Components_Errors_Errors","Components_SignForm_SignForm","setPage","Component","SignIn","ForgotPassword","sendResetCode","alert","resetCodeSent","updatePassword","_ref2","_callee2","resetCode","_context2","_x2","setValue","_this$state2","Auth","page","Components_SignUp_SignUp","Components_SignIn_SignIn","Components_ForgotPassword_ForgotPassword","MainPageContent","_useState","useState","_useState2","slicedToArray","avatar","setAvatar","_fetchAvatar","imgBlob","Authorization","getItem","photoURL","blob","URL","createObjectURL","useEffect","fetchAvatar","src","alt","concat","SignOutButton","_error","removeItem","UpdateName","sendRequest","console","log","UpdateAvatar","file","data","FormData","append","handleFile","files","Main","content","contentPage","Content_MainPageContent_MainPageContent","Components_UpdateName_UpdateName","Components_UpdateAvatar_UpdateAvatar","Components_SignOutButton_SignOutButton","App","getCurrentUser","setPageToSignIn","setPageToSignUp","Components_Main_Main","Components_Auth_Auth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1a4dd05.chunk.js","sourcesContent":["export default {\n    signIn: \"SIGNIN\",\n    signUp: \"SIGNUP\",\n    signedInMain: \"SIGNEDIN_MAIN\",\n    signedInUpdateName: \"SIGNEDIN_UPDATENAME\",\n    signedInUpdateAvatar: \"SIGNEDIN_UPDATEAVATAR\",\n    forgotPassword: \"FORGOT_PASSWORD\"\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SignForm = ({ setField, submitForm, values, fields }) => {\n    return <>\n        <form onSubmit={submitForm}>\n            {fields.map(d => {\n                const { key, name } = d;\n                return <div key={key}>\n                    <span>{name}: </span>\n                    <input\n                        value={values[key]}\n                        name={key}\n                        onChange={setField}\n                        type={key === \"password\" || key === \"passwordConf\" ? \"password\" : ''}\n                    />\n                </div>\n            })}\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n    </>\n}\n\nSignForm.propTypes = {\n    setField: PropTypes.func.isRequired,\n    submitForm: PropTypes.func.isRequired,\n    values: PropTypes.shape({\n        email: PropTypes.string.isRequired,\n        userName: PropTypes.string,\n        firstName: PropTypes.string,\n        lastName: PropTypes.string,\n        password: PropTypes.string.isRequired,\n        passwordConf: PropTypes.string\n    }),\n    fields: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        name: PropTypes.string\n    }))\n}\n\nexport default SignForm;","export default {\n    base: \"https://api.xutiancheng.me\",\n    testbase: \"https://localhost:8080\",\n    handlers: {\n        users: \"/v1/users\",\n        myuser: \"/v1/users/me\",\n        myuserAvatar: \"/v1/users/me/avatar\",\n        sessions: \"/v1/sessions\",\n        sessionsMine: \"/v1/sessions/mine\",\n        resetPasscode: \"/v1/resetcodes\",\n        passwords: \"/v1/passwords/\"\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Styles/Errors.css';\n\nconst Errors = ({ error, setError }) => {\n    switch (error) {\n        case \"\":\n            return <></>\n        default:\n            return <div className=\"error\">\n                <span className=\"error-hide\" onClick={() => setError(\"\")}>x</span>\n                Error: {error}\n            </div>\n    }\n}\n\nErrors.propTypes = {\n    error: PropTypes.string.isRequired,\n    setError: PropTypes.func\n}\n\nexport default Errors;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\n/**\n * @class\n * @classdesc SignUp handles the sign up component\n */\nclass SignUp extends Component {\n    static propTypes = {\n        setPage: PropTypes.func,\n        setAuthToken: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            userName: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            error: \"\"\n        };\n\n        this.fields = [\n            {\n                name: \"Email\",\n                key: \"email\"\n            },\n            {\n                name: \"Username\",\n                key: \"userName\"\n            },\n            {\n                name: \"First name\",\n                key: \"firstName\"\n            },\n            {\n                name: \"Last name\",\n                key: \"lastName\"\n            },\n            {\n                name: \"Password\",\n                key: \"password\"\n            },\n            {\n                name: \"Password Confirmation\",\n                key: \"passwordConf\"\n            }];\n    }\n\n    /**\n     * @description setField will set the field for the provided argument\n     */\n    setField = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    /**\n     * @description setError sets the error message\n     */\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    /**\n     * @description submitForm handles the form submission\n     */\n    submitForm = async (e) => {\n        e.preventDefault();\n        const { email,\n            userName,\n            firstName,\n            lastName,\n            password,\n            passwordConf } = this.state;\n        const sendData = {\n            email,\n            userName,\n            firstName,\n            lastName,\n            password,\n            passwordConf\n        };\n        const response = await fetch(api.base + api.handlers.users, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\")\n        localStorage.setItem(\"Authorization\", authToken);\n        this.setError(\"\");\n        this.props.setAuthToken(authToken);\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    render() {\n        const values = this.state;\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <SignForm\n                setField={this.setField}\n                submitForm={this.submitForm}\n                values={values}\n                fields={this.fields} />\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Sign in instead</button>\n        </>\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\n/**\n * @class\n * @classdesc SignIn handles the sign in component\n */\nclass SignIn extends Component {\n    static propTypes = {\n        setPage: PropTypes.func,\n        setAuthToken: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n\n        this.fields = [\n            {\n                name: \"Email\",\n                key: \"email\"\n            },\n            {\n                name: \"Password\",\n                key: \"password\"\n            }];\n    }\n\n    /**\n     * @description setField will set the field for the provided argument\n     */\n    setField = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    /**\n     * @description setError sets the error message\n     */\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    /**\n     * @description submitForm handles the form submission\n     */\n    submitForm = async (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const sendData = { email, password };\n        const response = await fetch(api.base + api.handlers.sessions, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\")\n        localStorage.setItem(\"Authorization\", authToken);\n        this.setError(\"\");\n        this.props.setAuthToken(authToken);\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    render() {\n        const values = this.state;\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <SignForm\n                setField={this.setField}\n                submitForm={this.submitForm}\n                values={values}\n                fields={this.fields} />\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signUp)}>Sign up instead</button>\n            <button onClick={(e) => this.props.setPage(e, PageTypes.forgotPassword)}>Forgot password</button>\n        </>\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            resetCode: \"\",\n            resetCodeSent: false,\n            error: \"\"\n        }\n    }\n\n    sendResetCode = async (e) => {\n        e.preventDefault();\n        const { email } = this.state;\n        const sendData = { email };\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"A reset code has been sent to your email\");\n        this.setState({ resetCodeSent: true });\n    }\n\n    updatePassword = async (e) => {\n        e.preventDefault();\n        const { email, password, passwordConf, resetCode } = this.state;\n        const sendData = { password, passwordConf, resetCode };\n        const response = await fetch(api.base + api.handlers.passwords + email, {\n            method: \"PUT\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"Your password has been updated\");\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error });\n    }\n\n    render() {\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            {resetCodeSent ?\n                <>\n                    <form onSubmit={(e) => this.updatePassword(e)}>\n                        <div>\n                            <span>Password: </span>\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\n                        </div>\n                        <div>\n                            <span>Password Confirmation: </span>\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\n                        </div>\n                        <div>\n                            <span>Reset Code: </span>\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\n                        </div>\n                        <input type=\"submit\" value=\"Update my password\" />\n                    </form>\n                </>\n                :\n                <>\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\n                        <div>\n                            <span>Email: </span>\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\n                        </div>\n                        <input type=\"submit\" value=\"Send me a reset code\" />\n                    </form>\n                </>}\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\n\n\n        </>\n\n    }\n\n\n\n}\n\nexport default ForgotPassword;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport SignUp from './Components/SignUp/SignUp';\nimport SignIn from './Components/SignIn/SignIn';\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\n\n/**\n * @class Auth\n * @description This is an auth object that controls what page\n * is loaded based on sign up or sign in state\n */\nconst Auth = ({ page, setPage, setAuthToken, setUser }) => {\n    switch (page) {\n        case PageTypes.signUp:\n            return <SignUp setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.signIn:\n            return <SignIn setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.forgotPassword:\n            return <ForgotPassword setPage={setPage} />;\n        default:\n            return <>Error, invalid path reached</>\n    }\n}\n\nAuth.propTypes = {\n    page: PropTypes.string.isRequired,\n    setPage: PropTypes.func.isRequired,\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default Auth;","import React, { useState, useEffect } from 'react';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport './Styles/MainPageContent.css';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\n\nconst MainPageContent = ({ user, setPage }) => {\n    const [avatar, setAvatar] = useState(null)\n\n    async function fetchAvatar() {\n        const response = await fetch(api.base + api.handlers.myuserAvatar, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        });\n        if (response.status >= 300) {\n            // const error = await response.text();\n            setAvatar(user.photoURL)\n            return;\n        }\n        const imgBlob = await response.blob();\n        setAvatar(URL.createObjectURL(imgBlob));\n    }\n\n    useEffect(() => {\n        fetchAvatar();\n        return;\n    }, []);\n\n    return <>\n        <div>Welcome to my application, {user.firstName} {user.lastName}</div>\n\n        {avatar && <img className={\"avatar\"} src={avatar} alt={`${user.firstName}'s avatar`} />}\n        <div><button onClick={(e) => { setPage(e, PageTypes.signedInUpdateName) }}>Update name</button></div>\n        <div><button onClick={(e) => { setPage(e, PageTypes.signedInUpdateAvatar) }}>Update avatar</button></div>\n    </>\n}\n\nexport default MainPageContent;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nconst SignOutButton = ({ setAuthToken, setUser }) => {\n    const [error, setError] = useState(\"\");\n\n    return <><button onClick={async (e) => {\n        e.preventDefault();\n        const response = await fetch(api.base + api.handlers.sessionsMine, {\n            method: \"DELETE\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            setError(error);\n            return;\n        }\n        localStorage.removeItem(\"Authorization\");\n        setError(\"\");\n        setAuthToken(\"\");\n        setUser(null);\n    }}>Sign out</button>\n        {error &&\n            <div>\n                <Errors error={error} setError={setError} />\n            </div>\n        }\n    </>\n}\n\nSignOutButton.propTypes = {\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default SignOutButton;","import React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nclass UpdateName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            error: ''\n        }\n    }\n\n    sendRequest = async (e) => {\n        e.preventDefault();\n        const { firstName, lastName } = this.state;\n        const sendData = { firstName, lastName };\n        const response = await fetch(api.base + api.handlers.myuser, {\n            method: \"PATCH\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            console.log(error);\n            this.setError(error);\n            return;\n        }\n        alert(\"Name changed\") // TODO make this better by refactoring errors\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    render() {\n        const { firstName, lastName, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <div>Enter a new name</div>\n            <form onSubmit={this.sendRequest}>\n                <div>\n                    <span>First name: </span>\n                    <input name={\"firstName\"} value={firstName} onChange={this.setValue} />\n                </div>\n                <div>\n                    <span>Last name: </span>\n                    <input name={\"lastName\"} value={lastName} onChange={this.setValue} />\n                </div>\n                <input type=\"submit\" value=\"Change name\" />\n            </form>\n        </>\n    }\n\n}\n\nexport default UpdateName;","import React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nclass UpdateAvatar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null,\n            error: ''\n        }\n    }\n\n    sendRequest = async (e) => {\n        e.preventDefault();\n        const { file } = this.state;\n        let data = new FormData()\n        data.append('uploadfile', file);\n        const response = await fetch(api.base + api.handlers.myuserAvatar, {\n            method: \"PUT\",\n            body: data,\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            console.log(error);\n            this.setError(error);\n            return;\n        }\n        alert(\"Avatar changed\"); // TODO make this better by refactoring errors\n    }\n\n    handleFile = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        })\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    render() {\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <div>Give yourself a new avatar</div>\n            <form onSubmit={this.sendRequest}>\n                <div>\n                    <span>Upload new avatar </span>\n                    <input type=\"file\" onChange={this.handleFile} />\n                </div>\n                <input type=\"submit\" value=\"Change avatar\" />\n            </form>\n        </>\n    }\n\n}\n\nexport default UpdateAvatar;","import React from 'react';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport MainPageContent from './Content/MainPageContent/MainPageContent';\nimport SignOutButton from './Components/SignOutButton/SignOutButton';\nimport UpdateName from './Components/UpdateName/UpdateName';\nimport UpdateAvatar from './Components/UpdateAvatar/UpdateAvatar';\n\nconst Main = ({ page, setPage, setAuthToken, setUser, user }) => {\n    let content = <></>\n    let contentPage = true;\n    switch (page) {\n        case PageTypes.signedInMain:\n            content = <MainPageContent user={user} setPage={setPage} />;\n            break;\n        case PageTypes.signedInUpdateName:\n            content = <UpdateName user={user} setUser={setUser} />;\n            break;\n        case PageTypes.signedInUpdateAvatar:\n            content = <UpdateAvatar user={user} setUser={setUser} />;\n            break;\n        default:\n            content = <>Error, invalid path reached</>;\n            contentPage = false;\n            break;\n    }\n    return <>\n        {content}\n        {contentPage && <button onClick={(e) => setPage(e, PageTypes.signedInMain)}>Back to main</button>}\n        <SignOutButton setUser={setUser} setAuthToken={setAuthToken} />\n    </>\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport Auth from './Components/Auth/Auth';\nimport PageTypes from './Constants/PageTypes/PageTypes';\nimport Main from './Components/Main/Main';\nimport './Styles/App.css';\nimport api from './Constants/APIEndpoints/APIEndpoints';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            page: localStorage.getItem(\"Authorization\") ? PageTypes.signedInMain : PageTypes.signIn,\n            authToken: localStorage.getItem(\"Authorization\") || null,\n            user: null\n        }\n\n        this.getCurrentUser()\n    }\n\n\n    /**\n     * @description Gets the users\n     */\n    getCurrentUser = async () => {\n        if (!this.state.authToken) {\n            return;\n        }\n        const response = await fetch(api.base + api.handlers.myuser, {\n            headers: new Headers({\n                \"Authorization\": this.state.authToken\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"Unable to verify login. Logging out...\");\n            localStorage.setItem(\"Authorization\", \"\");\n            this.setAuthToken(\"\");\n            this.setUser(null)\n            return;\n        }\n        const user = await response.json()\n        this.setUser(user);\n\n    }\n\n    /**\n     * @description sets the page type to sign in\n     */\n    setPageToSignIn = (e) => {\n        e.preventDefault();\n        this.setState({ page: PageTypes.signIn });\n    }\n\n    /**\n     * @description sets the page type to sign up\n     */\n    setPageToSignUp = (e) => {\n        e.preventDefault();\n        this.setState({ page: PageTypes.signUp });\n    }\n\n    setPage = (e, page) => {\n        e.preventDefault();\n        this.setState({ page });\n    }\n\n    /**\n     * @description sets auth token\n     */\n    setAuthToken = (authToken) => {\n        this.setState({ authToken, page: authToken === \"\" ? PageTypes.signIn : PageTypes.signedInMain });\n    }\n\n    /**\n     * @description sets the user\n     */\n    setUser = (user) => {\n        this.setState({ user });\n    }\n\n    render() {\n        const { page, user } = this.state;\n        return (\n            <div>\n                {user ?\n                    <Main page={page}\n                        setPage={this.setPage}\n                        setAuthToken={this.setAuthToken}\n                        user={user}\n                        setUser={this.setUser} />\n                    :\n                    <Auth page={page}\n                        setPage={this.setPage}\n                        setAuthToken={this.setAuthToken}\n                        setUser={this.setUser} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}