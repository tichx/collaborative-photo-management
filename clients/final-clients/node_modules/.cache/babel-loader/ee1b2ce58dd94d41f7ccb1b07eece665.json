{"ast":null,"code":"import _classCallCheck from \"/Users/thescoho/Downloads/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thescoho/Downloads/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thescoho/Downloads/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thescoho/Downloads/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thescoho/Downloads/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thescoho/Downloads/441-clients/src/Components/Main/Components/UploadImage/UploadImage.js\";\nimport React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage(props) {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this, props));\n\n    _this.handleFile = function (e) {\n      _this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    _this.setError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    _this.state = {\n      file: null,\n      error: ''\n    };\n    return _this;\n  } // sendRequest = async (e) => {\n  //     e.preventDefault();\n  //     const { file } = this.state;\n  //     let data = new FormData()\n  //     data.append('uploadfile', file);\n  //     const response = await fetch(api.base + api.handlers.upload, {\n  //         method: \"POST\",\n  //         body: data,\n  //         headers: new Headers({\n  //             \"Authorization\": localStorage.getItem(\"Authorization\"),\n  //         })\n  //     });\n  //     if (response.status >= 300) {\n  //         const error = await response.text();\n  //         console.log(error);\n  //         this.setError(error);\n  //         return;\n  //     }\n  //     alert(\"Upload Successful\"); // TODO make this better by refactoring errors\n  // }\n\n\n  _createClass(UploadImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          error = _this$state.error;\n      return React.createElement(React.Fragment, null, React.createElement(Errors, {\n        error: error,\n        setError: this.setError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Upload a new image\"), React.createElement(\"form\", {\n        encType: \"multipart/form-data\",\n        action: \"https://api.xutiancheng.me/v1/upload/\",\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nexport default UploadImage;","map":{"version":3,"sources":["/Users/thescoho/Downloads/441-clients/src/Components/Main/Components/UploadImage/UploadImage.js"],"names":["React","Component","api","Errors","UploadImage","props","handleFile","e","setState","file","target","files","setError","error","state","firstName","lastName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iDAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UA6BnBC,UA7BmB,GA6BN,UAACC,CAAD,EAAO;AAChB,YAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf;AADI,OAAd;AAGH,KAjCkB;;AAAA,UAmCnBC,QAnCmB,GAmCR,UAACC,KAAD,EAAW;AAClB,YAAKL,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAALA;AAAF,OAAd;AACH,KArCkB;;AAEf,UAAKC,KAAL,GAAa;AACTL,MAAAA,IAAI,EAAE,IADG;AAETI,MAAAA,KAAK,EAAE;AAFE,KAAb;AAFe;AAMlB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAYS;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UACwBH,KADxB,eACwBA,KADxB;AAEL,aAAO,0CACH,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,QAAQ,EAAE,KAAKD,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFG,EAGH;AACI,QAAA,OAAO,EAAC,qBADZ;AAEI,QAAA,MAAM,EAAC,uCAFX;AAGI,QAAA,MAAM,EAAC,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAHG,CAAP;AAYH;;;;EAtDqBX,S;;AA0D1B,eAAeG,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\n\nclass UploadImage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null,\n            error: ''\n        }\n    }\n\n    // sendRequest = async (e) => {\n    //     e.preventDefault();\n    //     const { file } = this.state;\n    //     let data = new FormData()\n    //     data.append('uploadfile', file);\n    //     const response = await fetch(api.base + api.handlers.upload, {\n    //         method: \"POST\",\n    //         body: data,\n    //         headers: new Headers({\n    //             \"Authorization\": localStorage.getItem(\"Authorization\"),\n    //         })\n    //     });\n    //     if (response.status >= 300) {\n    //         const error = await response.text();\n    //         console.log(error);\n    //         this.setError(error);\n    //         return;\n    //     }\n    //     alert(\"Upload Successful\"); // TODO make this better by refactoring errors\n    // }\n\n    handleFile = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        })\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    render() {\n        const { firstName, lastName, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <div>Upload a new image</div>\n            <form\n                encType=\"multipart/form-data\"\n                action=\"https://api.xutiancheng.me/v1/upload/\"\n                method=\"post\"\n                >\n                <input type=\"file\" name=\"file\" />\n                <input type=\"submit\" value=\"upload\" />   \n            </form>\n        </>\n    }\n\n}\n\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}