{"ast":null,"code":"import _slicedToArray from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/MainPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Styles/MainPage.css';\n\nvar MainPage = function MainPage(props) {\n  //data structure for getting images\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      imgDataList = _useState2[0],\n      setImgDataList = _useState2[1]; //data structure for getting tags\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tagDataList = _useState4[0],\n      setTagDataList = _useState4[1]; //variable to store user imput tag name\n\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tagText = _useState6[0],\n      setTagText = _useState6[1]; //map to store binding between tag id and object\n\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tagIDTable = _useState8[0],\n      setTagIDTable = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      IDTagTable = _useState10[0],\n      setIDTagTable = _useState10[1]; //variable to store selected tag\n\n\n  var _useState11 = useState(-1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      tag = _useState12[0],\n      setTag = _useState12[1];\n\n  var handleTagClick = function handleTagClick(newTagId) {\n    setTag(newTagId);\n  }; // Fetch all img data\n\n\n  console.log(localStorage.getItem(\"Authorization\"));\n  useEffect(function () {\n    fetch(\"https://api.xutiancheng.me/v1/photos\", {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': localStorage.getItem(\"Authorization\")\n      })\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      setImgDataList(data);\n    });\n  }, []); // Fetch all tag data\n\n  useEffect(function () {\n    fetch(\"https://api.xutiancheng.me/v1/tags\", {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': localStorage.getItem(\"Authorization\")\n      })\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      for (var index = 0; index < data.length; index++) {\n        var element = data[index];\n        var obj = {};\n        obj[element.id] = element.name;\n        Object.assign(tagIDTable, obj);\n        var obj2 = {};\n        obj2[element.name] = element.id;\n        Object.assign(IDTagTable, obj2);\n      }\n\n      setTagDataList(data);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TagTextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(TagButtonList, {\n    tags: tagDataList,\n    setTag: handleTagClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(ImgCardList, {\n    tag: tag,\n    imgDataList: imgDataList,\n    tagIDTable: tagIDTable,\n    IDTagTable: IDTagTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}; //populates the tag buttons into a list\n\n\nvar TagButtonList = function TagButtonList(props) {\n  var TagLists = props.tags.map(function (data) {\n    return React.createElement(TagButton, {\n      key: data.id,\n      tag: data,\n      setTag: props.setTag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      \"flexDirection\": \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, TagLists);\n}; //gets the new tag name typed by user, after user press 'Enter', pass it to /v1/tags\n//with payload: {\"name\": \"tagname\"}\n\n\nvar TagTextField = function TagTextField() {\n  return React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"create new tag\",\n    onKeyPress: function onKeyPress(event) {\n      if (event.key === 'Enter') {\n        var newTag = event.target.value; // POST request using fetch inside useEffect React hook\n\n        var requestOptions = {\n          method: 'post',\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem(\"Authorization\")\n          }),\n          body: JSON.stringify({\n            \"name\": newTag\n          })\n        };\n        fetch(\"https://api.xutiancheng.me/v1/tags\", requestOptions);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  });\n}; //individual button showing each tag\n\n\nvar TagButton = function TagButton(props) {\n  var handleTagClick = function handleTagClick(e) {\n    props.setTag(props.tag.id);\n  };\n\n  return React.createElement(\"button\", {\n    onClick: handleTagClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.tag.name);\n}; //populates the image cards into a list\n\n\nvar ImgCardList = function ImgCardList(props) {\n  var photoListItems;\n\n  if (props.tag === -1) {\n    photoListItems = props.imgDataList.map(function (data) {\n      // return <ImgCard key={data.id} img={data} tags={props.tags}/>\n      return React.createElement(ImgCard, {\n        key: data.id,\n        img: data,\n        style: {\n          display: \"flex\",\n          \"flex-wrap\": \"wrap\",\n          \"flexDirection\": \"row\"\n        },\n        tagIDTable: props.tagIDTable,\n        IDTagTable: props.IDTagTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n    });\n  } else {\n    // var tagIds = []\n    // data.tags.array.forEach(e => {\n    //     tagIds.push(e.id)\n    // });\n    photoListItems = props.imgDataList.map(function (data) {\n      var tagIds = [];\n      data.tags.forEach(function (e) {\n        tagIds.push(e.id);\n      });\n\n      if (tagIds.includes(props.tag)) {\n        // return <ImgCard key={data.id} img={data} tags={props.tags}/>\n        return React.createElement(ImgCard, {\n          key: data.id,\n          img: data,\n          style: {\n            display: \"flex\",\n            \"flex-wrap\": \"wrap\",\n            \"flexDirection\": \"row\"\n          },\n          tagIDTable: props.tagIDTable,\n          IDTagTable: props.IDTagTable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  return photoListItems;\n}; //individual image card, still missing function that when clicked,\n//lets user add a tag for this photo\n\n\nvar ImgCard = function ImgCard(props) {\n  var tagNameList = [];\n\n  for (var index = 0; index < props.img.tags.length; index++) {\n    var tagIDFromImage = props.img.tags[index].id;\n    var tagID = props.tagIDTable[tagIDFromImage];\n    tagNameList.push(tagID);\n  }\n\n  var displayResult = tagNameList.map(function (item, i) {\n    return React.createElement(\"p\", {\n      key: i,\n      className: \"font-size-0-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, item);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.img.url,\n    style: {\n      width: \"150px\",\n      height: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), displayResult, React.createElement(BindTagImg, {\n    imgID: props.img.id,\n    IDTagTable: props.IDTagTable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }));\n}; //TODO: bind image to a new tag name input by user and post \n//it to /v1/photos/:photoID/tag/:tagID \n\n\nvar BindTagImg = function BindTagImg(props) {\n  var imageID = props.imgID;\n  return React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"bind photo with old tag\",\n    onKeyPress: function onKeyPress(event) {\n      if (event.key === 'Enter') {\n        console.log(\"enter posting\");\n        var tagName = event.target.value;\n        var tagID = props.IDTagTable[tagName]; // POST request using fetch inside useEffect React hook\n\n        var requestOptions = {\n          method: 'post',\n          headers: new Headers({\n            'Authorization': localStorage.getItem(\"Authorization\")\n          })\n        };\n        fetch(\"https://api.xutiancheng.me/v1/photos/\" + imageID + \"/tag/\" + tagID, requestOptions);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  });\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/MainPage.js"],"names":["React","useEffect","useState","MainPage","props","imgDataList","setImgDataList","tagDataList","setTagDataList","tagText","setTagText","tagIDTable","setTagIDTable","IDTagTable","setIDTagTable","tag","setTag","handleTagClick","newTagId","console","log","localStorage","getItem","fetch","method","headers","Headers","then","resp","json","data","index","length","element","obj","id","name","Object","assign","obj2","TagButtonList","TagLists","tags","map","display","TagTextField","event","key","newTag","target","value","requestOptions","body","JSON","stringify","TagButton","e","ImgCardList","photoListItems","tagIds","forEach","push","includes","ImgCard","tagNameList","img","tagIDFromImage","tagID","displayResult","item","i","url","width","height","BindTagImg","imageID","imgID","tagName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Styles/MainPage.css';\n\nconst MainPage = (props) => {\n    //data structure for getting images\n    const [imgDataList,setImgDataList] = useState([]);\n    //data structure for getting tags\n    const [tagDataList,setTagDataList] = useState([]);\n    //variable to store user imput tag name\n    const [tagText, setTagText] = useState(\"\");\n\n    //map to store binding between tag id and object\n    const [tagIDTable, setTagIDTable] = useState({});\n    const [IDTagTable, setIDTagTable] = useState({});\n    //variable to store selected tag\n    const [tag,setTag] = useState(-1);\n    const handleTagClick = (newTagId)=>{\n        setTag(newTagId);\n    }\n\n\n    // Fetch all img data\n    console.log(localStorage.getItem(\"Authorization\"));\n    useEffect(() => {\n        fetch(\"https://api.xutiancheng.me/v1/photos\",  { \n            method: 'get', \n            headers: new Headers({\n                'Authorization': localStorage.getItem(\"Authorization\"), \n            })\n          })\n        .then(resp => resp.json())\n        .then(data => {setImgDataList(data)})\n    },[]);\n    // Fetch all tag data\n    useEffect(() => {\n        fetch(\"https://api.xutiancheng.me/v1/tags\",  { \n            method: 'get', \n            headers: new Headers({\n                  'Authorization': localStorage.getItem(\"Authorization\"), \n            })\n          })\n        .then(resp => resp.json())\n        .then(data => \n        {   \n            for (let index = 0; index < data.length; index++) {\n                const element = data[index];\n                let obj={};\n                obj[element.id] = element.name;\n                Object.assign(tagIDTable, obj);\n    \n                let obj2={};\n                obj2[element.name] = element.id;\n                Object.assign(IDTagTable, obj2);\n            }\n            setTagDataList(data);\n        })\n\n\n    },[]);\n\n    \n    return (\n    <div>\n        <TagTextField/>\n        <TagButtonList tags={tagDataList} setTag={handleTagClick}/>\n        <ImgCardList tag={tag} imgDataList={imgDataList} tagIDTable={tagIDTable} IDTagTable={IDTagTable}/>\n        {/* <button onClick={BindTagImg} key=\"12345\" IDTagTable={IDTagTable}>Add Tag</button> */}\n        {/* <ImgCardList tags={tagDataList} tag={tag} imgDataList={imgDataList}/> */}\n    </div>\n    );\n    \n}\n\n//populates the tag buttons into a list\nconst TagButtonList = (props)=>{\n    const TagLists = props.tags.map(data=><TagButton key={data.id} tag={data} setTag={props.setTag}/>);\n    \n    return (<div style={{display:\"flex\",\"flexDirection\": \"row\"}}>{TagLists}</div>)\n}\n\n//gets the new tag name typed by user, after user press 'Enter', pass it to /v1/tags\n//with payload: {\"name\": \"tagname\"}\nconst TagTextField = () => {\n    return <input\n    type=\"text\"\n    placeholder=\"create new tag\"\n    onKeyPress={event => {\n                if (event.key === 'Enter') {\n                    var newTag = event.target.value;\n                        // POST request using fetch inside useEffect React hook\n                        const requestOptions = {\n                            method: 'post',\n                            headers: new Headers({\n                                'Content-Type': 'application/json',\n                                'Authorization': localStorage.getItem(\"Authorization\"), \n                              }),\n                            body: JSON.stringify({\"name\": newTag})\n                        };\n\n                        fetch(\"https://api.xutiancheng.me/v1/tags\", requestOptions);\n                }\n              }}\n    />;\n\n};\n\n//individual button showing each tag\nconst TagButton = (props)=>{\n\n    const handleTagClick = (e)=>{\n        props.setTag(props.tag.id)\n    }\n        return <button onClick={handleTagClick}>{props.tag.name}</button>;\n}\n\n//populates the image cards into a list\nconst ImgCardList = (props) => {\n    var photoListItems;\n    if (props.tag === -1) {\n        photoListItems = props.imgDataList.map((data) => {\n            // return <ImgCard key={data.id} img={data} tags={props.tags}/>\n\n            return <ImgCard key={data.id} img={data} style={{display:\"flex\",\"flex-wrap\":\"wrap\",\"flexDirection\": \"row\"}}  tagIDTable={props.tagIDTable} IDTagTable={props.IDTagTable}/>\n        });\n    } else {\n        // var tagIds = []\n        // data.tags.array.forEach(e => {\n        //     tagIds.push(e.id)\n        // });\n        photoListItems = props.imgDataList.map((data) => {\n            var tagIds = []\n            data.tags.forEach(e => {\n                tagIds.push(e.id)\n            });\n            if (tagIds.includes(props.tag)){\n                // return <ImgCard key={data.id} img={data} tags={props.tags}/>\n\n                return <ImgCard key={data.id} img={data} style={{display:\"flex\",\"flex-wrap\":\"wrap\",\"flexDirection\": \"row\"}} tagIDTable={props.tagIDTable} IDTagTable={props.IDTagTable}/>\n            }\n        });\n    }\n    \n    return (photoListItems)\n}\n\n//individual image card, still missing function that when clicked,\n//lets user add a tag for this photo\nconst ImgCard = (props) =>{\n    \n    let tagNameList = [];\n    for (let index = 0; index < props.img.tags.length; index++) {\n        let tagIDFromImage = props.img.tags[index].id;\n        let tagID = props.tagIDTable[tagIDFromImage];\n        tagNameList.push(tagID);\n    }\n    let displayResult = tagNameList.map((item, i) => (\n          <p key={i} className=\"font-size-0-8\">\n            {item}\n          </p>)\n    );\n    \n    return(\n    <div>\n        <img src={props.img.url} style={{width:\"150px\",height:\"150px\"}}/>\n        {displayResult}\n        <BindTagImg imgID={props.img.id} IDTagTable={props.IDTagTable}/>\n         {/* <button onClick={BindTagImg} key={props.img.id} IDTagTable={props.IDTagTable}>Add Tag</button> */}\n    </div>\n     );\n    \n}\n\n//TODO: bind image to a new tag name input by user and post \n//it to /v1/photos/:photoID/tag/:tagID \nconst BindTagImg = (props)=>{\n    var imageID = props.imgID;\n    return <input\n    type=\"text\"\n    placeholder=\"bind photo with old tag\"\n    onKeyPress={event => {\n                if (event.key === 'Enter') {\n                    console.log(\"enter posting\");\n                    var tagName = event.target.value;\n                    var tagID = props.IDTagTable[tagName];\n                    \n                        // POST request using fetch inside useEffect React hook\n                        const requestOptions = {\n                            method: 'post',\n                            headers: new Headers({\n                                'Authorization': localStorage.getItem(\"Authorization\"), \n                              }),\n                        };\n                        fetch(\"https://api.xutiancheng.me/v1/photos/\"+imageID+\"/tag/\"+tagID, requestOptions)\n                    \n                }\n              }}\n    />;\n}\n\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}