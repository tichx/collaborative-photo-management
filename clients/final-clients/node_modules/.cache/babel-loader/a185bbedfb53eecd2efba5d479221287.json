{"ast":null,"code":"import _regeneratorRuntime from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/Components/Main/Content/MainPageContent/MainPageContent.js\";\nimport React, { useState, useEffect } from 'react';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport './Styles/MainPageContent.css';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\n\nvar MainPageContent = function MainPageContent(_ref) {\n  var user = _ref.user,\n      setPage = _ref.setPage;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatar = _useState2[0],\n      setAvatar = _useState2[1];\n\n  function fetchAvatar() {\n    return _fetchAvatar.apply(this, arguments);\n  }\n\n  function _fetchAvatar() {\n    _fetchAvatar = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, imgBlob;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(api.base + api.handlers.myuserAvatar, {\n                method: \"GET\",\n                headers: new Headers({\n                  \"Authorization\": localStorage.getItem(\"Authorization\")\n                })\n              });\n\n            case 2:\n              response = _context.sent;\n\n              if (!(response.status >= 300)) {\n                _context.next = 6;\n                break;\n              }\n\n              // const error = await response.text();\n              setAvatar(user.photoURL);\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return response.blob();\n\n            case 8:\n              imgBlob = _context.sent;\n              setAvatar(URL.createObjectURL(imgBlob));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchAvatar.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    fetchAvatar();\n    return;\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Welcome to my application, \", user.firstName, \" \", user.lastName), avatar && React.createElement(\"img\", {\n    className: \"avatar\",\n    src: avatar,\n    alt: \"\".concat(user.firstName, \"'s avatar\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      setPage(e, PageTypes.signedInUpdateName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Update name\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      setPage(e, PageTypes.signedInUpdateAvatar);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Update avatar\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      setPage(e, PageTypes.signedInUploadImage);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Upload an image\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      setPage(e, PageTypes.mainPage);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"View Photo\")));\n};\n\nexport default MainPageContent;","map":{"version":3,"sources":["/Users/danfengyang/go/src/INFO441/collaborative-photo-management/clients/final-clients/src/Components/Main/Content/MainPageContent/MainPageContent.js"],"names":["React","useState","useEffect","PageTypes","api","MainPageContent","user","setPage","avatar","setAvatar","fetchAvatar","fetch","base","handlers","myuserAvatar","method","headers","Headers","localStorage","getItem","response","status","photoURL","blob","imgBlob","URL","createObjectURL","firstName","lastName","e","signedInUpdateName","signedInUpdateAvatar","signedInUploadImage","mainPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport './Styles/MainPageContent.css';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\n\nconst MainPageContent = ({ user, setPage }) => {\n    const [avatar, setAvatar] = useState(null)\n\n    async function fetchAvatar() {\n        const response = await fetch(api.base + api.handlers.myuserAvatar, {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        });\n        if (response.status >= 300) {\n            // const error = await response.text();\n            setAvatar(user.photoURL)\n            return;\n        }\n        const imgBlob = await response.blob();\n        setAvatar(URL.createObjectURL(imgBlob));\n    }\n\n    useEffect(() => {\n        fetchAvatar();\n        return;\n    }, []);\n\n    return <>\n        <div>Welcome to my application, {user.firstName} {user.lastName}</div>\n\n        {avatar && <img className={\"avatar\"} src={avatar} alt={`${user.firstName}'s avatar`} />}\n        <div><button onClick={(e) => { setPage(e, PageTypes.signedInUpdateName) }}>Update name</button></div>\n        <div><button onClick={(e) => { setPage(e, PageTypes.signedInUpdateAvatar) }}>Update avatar</button></div>\n        <div><button onClick={(e) => { setPage(e, PageTypes.signedInUploadImage) }}>Upload an image</button></div>\n        <div><button onClick={(e) => { setPage(e, PageTypes.mainPage) }}>View Photo</button></div>\n    </>\n}\n\nexport default MainPageContent;"]},"metadata":{},"sourceType":"module"}