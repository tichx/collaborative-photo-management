{"ast":null,"code":"import _defineProperty from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tichx/go/src/assignments-tichx/clients/441-clients/src/Components/Auth/Components/ForgotPassword/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).call(this, props));\n\n    _this.sendResetCode =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var email, sendData, response, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                email = _this.state.email;\n                sendData = {\n                  email: email\n                };\n                _context.next = 5;\n                return fetch(api.base + api.handlers.resetPasscode, {\n                  method: \"POST\",\n                  body: JSON.stringify(sendData),\n                  headers: new Headers({\n                    \"Content-Type\": \"application/json\"\n                  })\n                });\n\n              case 5:\n                response = _context.sent;\n\n                if (!(response.status >= 300)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 9;\n                return response.text();\n\n              case 9:\n                error = _context.sent;\n\n                _this.setError(error);\n\n                return _context.abrupt(\"return\");\n\n              case 12:\n                _this.setError(\"\");\n\n                alert(\"A reset code has been sent to your email\");\n\n                _this.setState({\n                  resetCodeSent: true\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.updatePassword =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var _this$state, email, password, passwordConf, resetCode, sendData, response, error;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, email = _this$state.email, password = _this$state.password, passwordConf = _this$state.passwordConf, resetCode = _this$state.resetCode;\n                sendData = {\n                  password: password,\n                  passwordConf: passwordConf,\n                  resetCode: resetCode\n                };\n                _context2.next = 5;\n                return fetch(api.base + api.handlers.passwords + email, {\n                  method: \"PUT\",\n                  body: JSON.stringify(sendData),\n                  headers: new Headers({\n                    \"Content-Type\": \"application/json\"\n                  })\n                });\n\n              case 5:\n                response = _context2.sent;\n\n                if (!(response.status >= 300)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 9;\n                return response.text();\n\n              case 9:\n                error = _context2.sent;\n\n                _this.setError(error);\n\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                _this.setError(\"\");\n\n                alert(\"Your password has been updated\");\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.setValue = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.setError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConf: \"\",\n      resetCode: \"\",\n      resetCodeSent: false,\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConf = _this$state2.passwordConf,\n          resetCode = _this$state2.resetCode,\n          resetCodeSent = _this$state2.resetCodeSent,\n          error = _this$state2.error;\n      return React.createElement(React.Fragment, null, React.createElement(Errors, {\n        error: error,\n        setError: this.setError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), resetCodeSent ? React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.updatePassword(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Password: \"), React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        onChange: this.setValue,\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Password Confirmation: \"), React.createElement(\"input\", {\n        name: \"passwordConf\",\n        type: \"password\",\n        onChange: this.setValue,\n        value: passwordConf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Reset Code: \"), React.createElement(\"input\", {\n        name: \"resetCode\",\n        onChange: this.setValue,\n        value: resetCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update my password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))) : React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.sendResetCode(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Email: \"), React.createElement(\"input\", {\n        name: \"email\",\n        onChange: this.setValue,\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Send me a reset code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.props.setPage(e, PageTypes.signIn);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Back to sign in\"));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/tichx/go/src/assignments-tichx/clients/441-clients/src/Components/Auth/Components/ForgotPassword/ForgotPassword.js"],"names":["React","Component","Errors","api","PageTypes","ForgotPassword","props","sendResetCode","e","preventDefault","email","state","sendData","fetch","base","handlers","resetPasscode","method","body","JSON","stringify","headers","Headers","response","status","text","error","setError","alert","setState","resetCodeSent","updatePassword","password","passwordConf","resetCode","passwords","setValue","target","name","value","setPage","signIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            resetCode: \"\",\n            resetCodeSent: false,\n            error: \"\"\n        }\n    }\n\n    sendResetCode = async (e) => {\n        e.preventDefault();\n        const { email } = this.state;\n        const sendData = { email };\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"A reset code has been sent to your email\");\n        this.setState({ resetCodeSent: true });\n    }\n\n    updatePassword = async (e) => {\n        e.preventDefault();\n        const { email, password, passwordConf, resetCode } = this.state;\n        const sendData = { password, passwordConf, resetCode };\n        const response = await fetch(api.base + api.handlers.passwords + email, {\n            method: \"PUT\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"Your password has been updated\");\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error });\n    }\n\n    render() {\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            {resetCodeSent ?\n                <>\n                    <form onSubmit={(e) => this.updatePassword(e)}>\n                        <div>\n                            <span>Password: </span>\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\n                        </div>\n                        <div>\n                            <span>Password Confirmation: </span>\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\n                        </div>\n                        <div>\n                            <span>Reset Code: </span>\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\n                        </div>\n                        <input type=\"submit\" value=\"Update my password\" />\n                    </form>\n                </>\n                :\n                <>\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\n                        <div>\n                            <span>Email: </span>\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\n                        </div>\n                        <input type=\"submit\" value=\"Send me a reset code\" />\n                    </form>\n                </>}\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\n\n\n        </>\n\n    }\n\n\n\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}